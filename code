<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SmartKitchen</title>
    <style>
        /* Reset CSS */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        /* Global styles */
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f3f5f8;
            color: #333;
            line-height: 1.6;
        }

        /* Container */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header */
        header {
            background-color: #2c3e50;
            color: #fff;
            text-align: center;
            padding: 20px 0;
        }
        header h1 {
            font-size: 2.5em;
        }

        /* Sections */
        section {
            margin-bottom: 40px;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }
        section h2 {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #333;
        }

        /* Recipe Section */
        #recipe-section input[type="text"] {
            width: 100%;
            padding: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 1em;
            margin-bottom: 20px;
        }
        .recipe {
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        .recipe:hover {
            background-color: #f9f9f9;
        }
        .recipe h3 {
            font-size: 1.2em;
            margin-bottom: 10px;
            color: #333;
        }
        .recipe p {
            color: #666;
            margin-bottom: 5px;
        }
        .recipe a {
            display: inline-block;
            background-color: #3498db;
            color: #fff;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        .recipe a:hover {
            background-color: #2980b9;
        }

        /* Cart Section */
        .cart h3 {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #333;
        }
        .cart ul {
            list-style-type: none;
            padding: 0;
        }
        .cart li {
            margin-bottom: 5px;
            color: #666;
        }

        /* Order Links */
        .order-links {
            text-align: center;
            margin-top: 20px;
        }
        .order-links a {
            display: inline-block;
            background-color: #27ae60;
            color: #fff;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 5px;
            margin: 0 5px;
            transition: background-color 0.3s ease;
        }
        .order-links a:hover {
            background-color: #219a52;
        }

        /* Profile Section */
        .profile {
            text-align: center;
            margin-top: 20px;
        }
        .profile h2 {
            font-size: 1.5em;
            margin-bottom: 20px;
            color: #333;
        }
        .profile p {
            color: #666;
            margin-bottom: 10px;
        }
        .recipe img {
            width: 10px;
            height:5px;
            border-radius: 2px;
            margin-bottom: 3px;
        }
        .profile button {
            background-color: #3498db;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        .profile button:hover {
            background-color: #2980b9;
        }

        /* Media Queries */
        @media screen and (min-width: 768px) {
            .container {
                display: flex;
                justify-content: space-between;
                align-items: flex-start;
                flex-wrap: wrap;
            }
            section {
                width: calc(48% - 40px);
            }
            .order-links {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <header>
        <h1>SmartKitchen</h1>
    </header>

    <div class="container">
        <section id="calories-counter">
            <h2>Calories Counter</h2>
            <p>Today's Calorie Intake: <span id="calories-intake">...</span></p>
            <p>Daily Goal: <span id="daily-goal">...</span></p>
            <p>Remaining Calories: <span id="remaining-calories">...</span></p>
        </section>

        <section id="recipe-section">
            <h2>Recipe Section</h2>
            <input type="text" id="recipe-input" placeholder="Type the dish name...">
            <div id="recipe-list">
                <!-- Recommended recipes will be displayed here dynamically -->
            </div>
        </section>

        <section class="cart" id="cart-section">
            <h2>Shopping Cart</h2>
            <ul id="cart-items">
                <!-- Cart items will be displayed here dynamically -->
            </ul>
        </section>
    </div>

    <div class="profile">
        <h2>Profile</h2>
        <img src="https://img.freepik.com/free-vector/businessman-character-avatar-isolated_24877-60111.jpg?size=338&ext=jpg&ga=GA1.1.1700460183.1713225600&semt=ais" alt="Profile Picture">
        <p>Welcome, User!</p>
        <button>Edit Profile</button>
        <button>Edit Cart</button>
    </div>

    <div class="order-links">
        <a href="https://www.bigbasket.com/" target="_blank">Order from BigBasket</a>
        <a href="https://www.blinkit.com/" target="_blank">Order from Blinkit</a>
    </div>

    <script>
        // Dummy data for demonstration
        const recipes = [
            { title: "Recipe 1", rating: "4.8", ingredients: ["Ingredient 1", "Ingredient 2", "Ingredient 3"], videoLink: "https://youtu.be/nRPmoioNisI?si=Pw4SdoIRbRAMnh1a" },
            { title: "Recipe 2", rating: "4.5", ingredients: ["Ingredient A", "Ingredient B", "Ingredient C"], videoLink: "https://youtu.be/nRPmoioNisI?si=Pw4SdoIRbRAMnh1a" },
            { title: "Recipe 3", rating: "4.3", ingredients: ["Ingredient X", "Ingredient Y", "Ingredient Z"], videoLink: "https://youtu.be/nRPmoioNisI?si=Pw4SdoIRbRAMnh1a" }
            // Add more recipe objects here as needed
        ];

        // Function to render recommended recipes
        function renderRecipes(recipes) {
            const recipeList = document.getElementById('recipe-list');
            recipeList.innerHTML = '';
            recipes.forEach(recipe => {
                const recipeElement = document.createElement('div');
                recipeElement.classList.add('recipe');
                recipeElement.innerHTML = `
                    <h3>${recipe.title}</h3>
                    <p>Rating: ${recipe.rating}</p>
                    <p>Ingredients: ${recipe.ingredients.join(', ')}</p>
                    <a href="${recipe.videoLink}" target="_blank">Watch Video</a>
                `;
                recipeElement.addEventListener('click', () => addToCart(recipe.ingredients));
                recipeList.appendChild(recipeElement);
            });
        }

        // Function to add ingredients to the cart
        function addToCart(ingredients) {
            const cartItems = document.getElementById('cart-items');
            ingredients.forEach(ingredient => {
                const li = document.createElement('li');
                li.textContent = ingredient;
                cartItems.appendChild(li);
            });
        }

        // Event listener for recipe input
        document.getElementById('recipe-input').addEventListener('input', function(event) {
            const userInput = event.target.value.toLowerCase();
            const filteredRecipes = recipes.filter(recipe => recipe.title.toLowerCase().includes(userInput));
            // Sort recipes by rating in descending order
            filteredRecipes.sort((a, b) => parseFloat(b.rating) - parseFloat(a.rating));
            renderRecipes(filteredRecipes);
        });

        // Dummy function to update calorie-related information
        function updateCaloriesInfo() {
            // Implement your logic to update calorie-related information here
            // For demonstration purposes, just updating with dummy values
            document.getElementById('calories-intake').textContent = "2000";
            document.getElementById('daily-goal').textContent = "2500";
            document.getElementById('remaining-calories').textContent = "500";
        }

        // Initial call to update calorie-related information
        updateCaloriesInfo();
    </script>
</body>
</html>
